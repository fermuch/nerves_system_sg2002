# Firmware configuration file for the SG2002

require-fwup-version="1.0.0"

include("${NERVES_SDK_IMAGES:-.}/fwup_include/fwup-common.conf")

# File resources are listed in the order that they are included in the .fw file
# This is important, since this is the order that they're written on a firmware
# update due to the event driven nature of the update system.
file-resource boot.vfat {
    host-path = "${NERVES_SYSTEM}/images/boot.vfat"
}
file-resource rootfs.img {
    host-path = ${ROOTFS}

    # Error out if the rootfs size exceeds the partition size
    assert-size-lte = ${ROOTFS_A_PART_COUNT}
}

mbr mbr {
    partition 0 {
        block-offset = ${BOOT_PART_OFFSET}
        block-count = ${BOOT_PART_COUNT}
        type = 0x0c # FAT32 LBA
        boot = true
    }
    partition 1 {
        block-offset = ${ROOTFS_A_PART_OFFSET}
        block-count = ${ROOTFS_A_PART_COUNT}
        type = 0x83 # Linux
        expand = true
    }
}

# This firmware task writes everything to the destination media.
# This should only be run at the factory to initialize a board!
task complete {
    # Only match if not mounted
    require-unmounted-destination = true

    on-init {
        mbr_write(mbr)
    }

    # Write pre-built boot.vfat image directly to boot partition
    on-resource boot.vfat {
        raw_write(${BOOT_PART_OFFSET})
    }

    on-resource rootfs.img {
        # write to the rootfs partition
        raw_write(${ROOTFS_A_PART_OFFSET})
    }

    on-finish {
        # Simple single partition layout - no cleanup needed
    }
}

task upgrade {
    # Simple upgrade - replace rootfs and boot partition
    
    on-init {
        info("Upgrading system")
    }

    # Replace entire boot partition with new boot.vfat image
    on-resource boot.vfat {
        raw_write(${BOOT_PART_OFFSET})
    }

    on-resource rootfs.img {
        # Overwrite the rootfs partition
        raw_write(${ROOTFS_A_PART_OFFSET})
    }

    on-finish {
        info("Upgrade complete")
    }
}